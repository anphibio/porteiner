version: "3.7"

services:
  traefik:
    image: traefik:v2.2.1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`zabbix-traefik.cursozabbix5.local`)"
        - "traefik.http.services.justAdummyService.loadbalancer.server.port=1337"
        - "traefik.http.routers.traefik.service=api@internal"
    ports:
      - "80:80"
      - "843:443"
    networks:
      - "agent_network"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api=true"
      - "--log.level=DEBUG"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - "agent_network"
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      
  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "8000:8000"
    volumes:
      - /mnt/data-portainer:/data
    networks:
      - "agent_network"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
         - "traefik.enable=true"
         - "traefik.http.routers.porteiner.entrypoints=web"
         - "traefik.http.routers.porteiner.rule=Host(`porteiner-c1.detran.al.gov.br`)"
         - "traefik.http.services.porteiner.loadbalancer.server.port=9000"      
networks:
  agent_network:
    driver: overlay
    attachable: true
      
